{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1zxhPa6ujWVnuM-ku8hOxSUc8VYqn8cE8","timestamp":1707895062882}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## German Credit"],"metadata":{"id":"46I2OI_YezaF"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":181},"id":"7RU4DKCGSwbV","outputId":"60492f5e-fa3a-4164-acbe-229f735158e9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  Age   Sex  Job Housing Saving accounts Checking account  \\\n","0         501   42  male    2    free          little           little   \n","1         502   49  male    2     own        moderate             rich   \n","2         503   38  male    2     own        moderate         moderate   \n","\n","   Credit amount  Duration   Purpose  Risk  \n","0           5493        36       car   NaN  \n","1           1126         9  radio/TV   NaN  \n","2           1216        24  radio/TV   NaN  "],"text/html":["\n","  <div id=\"df-4b9e9643-d27f-426b-b495-d82a90518ca5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>42</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>5493</td>\n","      <td>36</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>1126</td>\n","      <td>9</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>38</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>1216</td>\n","      <td>24</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b9e9643-d27f-426b-b495-d82a90518ca5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b9e9643-d27f-426b-b495-d82a90518ca5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b9e9643-d27f-426b-b495-d82a90518ca5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f5187a37-f5e6-4bc5-9a6c-2b3403bc44fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f5187a37-f5e6-4bc5-9a6c-2b3403bc44fa')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f5187a37-f5e6-4bc5-9a6c-2b3403bc44fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":611}],"source":["import pandas as pd\n","\n","train = 'train.xlsx'\n","df_train = pd.read_excel(train)\n","df_train.head(3)\n","\n","test = 'test.xlsx'\n","df_test = pd.read_excel(test)\n","df_test.head(3)"]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"CHpNocQ6T6SG","outputId":"47a0ab5b-fc0c-47e3-9176-73ed59e2c063"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own             NaN           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little              NaN   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little              NaN   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-337f2756-ecfd-4ffa-a9c6-61266246b199\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>67</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>1169</td>\n","      <td>6</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>22</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>5951</td>\n","      <td>48</td>\n","      <td>radio/TV</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>2096</td>\n","      <td>12</td>\n","      <td>education</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>45</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>7882</td>\n","      <td>42</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>53</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>4870</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>29</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>rent</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>9034</td>\n","      <td>36</td>\n","      <td>furniture/equipment</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1585</td>\n","      <td>24</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>1301</td>\n","      <td>18</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>1323</td>\n","      <td>6</td>\n","      <td>car</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>27</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3123</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-337f2756-ecfd-4ffa-a9c6-61266246b199')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-337f2756-ecfd-4ffa-a9c6-61266246b199 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-337f2756-ecfd-4ffa-a9c6-61266246b199');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef0980aa-0952-4411-abbc-6fc68e457a76\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef0980aa-0952-4411-abbc-6fc68e457a76')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef0980aa-0952-4411-abbc-6fc68e457a76 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":612}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"iFniNpU_T8se","outputId":"8b20bd54-7ff7-4997-9fe2-bc4bf149682a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0           501   42    male    2    free          little           little   \n","1           502   49    male    2     own        moderate             rich   \n","2           503   38    male    2     own        moderate         moderate   \n","3           504   24  female    2    rent          little           little   \n","4           505   27    male    1     own             NaN              NaN   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","494         995   31  female    1     own          little              NaN   \n","495         996   40    male    3     own          little           little   \n","496         997   38    male    2     own          little              NaN   \n","497         998   23    male    2    free          little           little   \n","498         999   27    male    2     own        moderate         moderate   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             5493        36                  car   NaN  \n","1             1126         9             radio/TV   NaN  \n","2             1216        24             radio/TV   NaN  \n","3             1207        24                  car   NaN  \n","4             1309        10                  car   NaN  \n","..             ...       ...                  ...   ...  \n","494           1736        12  furniture/equipment   NaN  \n","495           3857        30                  car   NaN  \n","496            804        12             radio/TV   NaN  \n","497           1845        45             radio/TV   NaN  \n","498           4576        45                  car   NaN  \n","\n","[499 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-58c146be-b02f-475b-b349-43ba21aac7cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>42</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>5493</td>\n","      <td>36</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>1126</td>\n","      <td>9</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>38</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>1216</td>\n","      <td>24</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>504</td>\n","      <td>24</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>rent</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>1207</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>505</td>\n","      <td>27</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1309</td>\n","      <td>10</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494</th>\n","      <td>995</td>\n","      <td>31</td>\n","      <td>female</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1736</td>\n","      <td>12</td>\n","      <td>furniture/equipment</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>996</td>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3857</td>\n","      <td>30</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>997</td>\n","      <td>38</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>804</td>\n","      <td>12</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>998</td>\n","      <td>23</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>1845</td>\n","      <td>45</td>\n","      <td>radio/TV</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>999</td>\n","      <td>27</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>4576</td>\n","      <td>45</td>\n","      <td>car</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58c146be-b02f-475b-b349-43ba21aac7cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-58c146be-b02f-475b-b349-43ba21aac7cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-58c146be-b02f-475b-b349-43ba21aac7cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aa957cf3-4fc0-49e6-839f-bcbd48a4f154\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa957cf3-4fc0-49e6-839f-bcbd48a4f154')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aa957cf3-4fc0-49e6-839f-bcbd48a4f154 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":613}]},{"cell_type":"markdown","source":["# EDA"],"metadata":{"id":"CNZYVcZsZYV3"}},{"cell_type":"code","source":["df_train.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4e6rZP_jUbYf","outputId":"73a45813-8d1f-4589-d94c-ad032f4bbeaf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'Age', 'Sex', 'Job', 'Housing', 'Saving accounts',\n","       'Checking account', 'Credit amount', 'Duration', 'Purpose', 'Risk'],\n","      dtype='object')"]},"metadata":{},"execution_count":615}]},{"cell_type":"code","source":["df_train.shape  # 501데이터 11개 칼럼\n","df_test.shape    #499데이터 11개 칼럼"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wo2VlqkYU1vY","outputId":"b322c22e-e451-4ea2-864f-d05e23fdcfbc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(499, 11)"]},"metadata":{},"execution_count":616}]},{"cell_type":"code","source":["df_train.info  # accounts에 null값이 있음"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z0QcmX7UVGWv","outputId":"cd4a8663-71e9-407d-aea0-ea6c959b6b71"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of      Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own             NaN           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little              NaN   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little              NaN   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]>"]},"metadata":{},"execution_count":617}]},{"cell_type":"code","source":["df_test.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1jyxafufVaN4","outputId":"c2fe0e46-2857-4b43-a1ec-11a144451f9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of      Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0           501   42    male    2    free          little           little   \n","1           502   49    male    2     own        moderate             rich   \n","2           503   38    male    2     own        moderate         moderate   \n","3           504   24  female    2    rent          little           little   \n","4           505   27    male    1     own             NaN              NaN   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","494         995   31  female    1     own          little              NaN   \n","495         996   40    male    3     own          little           little   \n","496         997   38    male    2     own          little              NaN   \n","497         998   23    male    2    free          little           little   \n","498         999   27    male    2     own        moderate         moderate   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             5493        36                  car   NaN  \n","1             1126         9             radio/TV   NaN  \n","2             1216        24             radio/TV   NaN  \n","3             1207        24                  car   NaN  \n","4             1309        10                  car   NaN  \n","..             ...       ...                  ...   ...  \n","494           1736        12  furniture/equipment   NaN  \n","495           3857        30                  car   NaN  \n","496            804        12             radio/TV   NaN  \n","497           1845        45             radio/TV   NaN  \n","498           4576        45                  car   NaN  \n","\n","[499 rows x 11 columns]>"]},"metadata":{},"execution_count":618}]},{"cell_type":"code","source":["df_train.isnull().sum()   # acoounts 있을수도 없을수도  account는 지우지 말고 냅둬야함."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qWoWzF54Voah","outputId":"0ca664dd-1987-4c56-a988-1758deecae4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0            0\n","Age                   0\n","Sex                   0\n","Job                   0\n","Housing               0\n","Saving accounts      88\n","Checking account    197\n","Credit amount         0\n","Duration              0\n","Purpose               0\n","Risk                  0\n","dtype: int64"]},"metadata":{},"execution_count":619}]},{"cell_type":"code","source":["df_test.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2bIYPTkcVxrV","outputId":"c0a446cc-4524-40ac-a699-db57347a70b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0            0\n","Age                   0\n","Sex                   0\n","Job                   0\n","Housing               0\n","Saving accounts      95\n","Checking account    197\n","Credit amount         0\n","Duration              0\n","Purpose               0\n","Risk                499\n","dtype: int64"]},"metadata":{},"execution_count":620}]},{"cell_type":"code","source":["# import visual library\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"YUXfPBfRWw3x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def bar_chart(feature):\n","  good = df_train[df_train['Risk']=='good'][feature].value_counts()\n","  bad = df_train[df_train['Risk']=='bad'][feature].value_counts()\n","\n","  df = pd.DataFrame([good, bad])\n","  df.index = ['good', 'bad']\n","  df.plot(kind='bar', stacked=True, figsize=(12,8))"],"metadata":{"id":"lmhJ5k6zXBQZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bar_chart('Age')   # Age는 너무 많음"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":862},"id":"NiutRJYdXl4L","outputId":"9e4b1e17-6bab-4d33-ba04-6b32f611e029"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Job')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"wI6uA74CYVMq","outputId":"47e843d7-4ad7-4384-cfb9-2536232136d3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Sex')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"zB4Z2emLX-2i","outputId":"b121e6cc-e3e3-4f20-b0e0-b6084d7c1bd5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Housing')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"Q5U_758FYb9Q","outputId":"05f9d595-6119-4dba-ab97-8871dcda76bd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Saving accounts')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"-gfZjG4rYmub","outputId":"81af0140-cc13-47ef-ed2b-099d44e48c3c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Checking account')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"tQYquJ6uYthi","outputId":"b28a0257-bb00-49da-e2b3-e56dd4033e30"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["bar_chart('Purpose')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"r4-ileCDY7Bw","outputId":"79177b05-5993-44f0-cf21-a3282325ac02"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_train.sort_values(by='Credit amount', ascending=False).head(10)['Risk'].value_counts()\n","df_train.sort_values(by='Credit amount', ascending=False).tail(10)['Risk'].value_counts()  # Credit ammount 가 많을 수록 bad 비율이 높고, 적을수록 bad 비율 낮음.  상위 top bad 비율 80퍼"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3ljR02zAZ9sU","outputId":"9afaff20-2123-4176-8025-f622e790333e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["good    9\n","bad     1\n","Name: Risk, dtype: int64"]},"metadata":{},"execution_count":630}]},{"cell_type":"code","source":["df_train.sort_values(by='Duration', ascending=False).head(10)['Risk'].value_counts()   # duration 상위 10 bad 높음\n","#df_train.sort_values(by='Duration', ascending=False).tail(10)['Risk'].value_counts()  # duration 하위 10 good 높음"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xYJXoBfCb4pK","outputId":"1f4b8f3f-5dd9-4862-deca-4ed9d599f721"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bad     6\n","good    4\n","Name: Risk, dtype: int64"]},"metadata":{},"execution_count":631}]},{"cell_type":"code","source":["print(df_train.fillna('none'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"StRKcO44eYw3","outputId":"cded1e06-3968-40b0-d5da-5d1eb6a8a013"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own            none           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little             none   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little             none   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"3XHXd8T7fSc0","outputId":"facd52ae-4cab-4084-c9c5-1f889df821d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own             NaN           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little              NaN   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little              NaN   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-fb3a46ec-65fa-4bf6-a38b-ef0506025d9c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>67</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>1169</td>\n","      <td>6</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>22</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>5951</td>\n","      <td>48</td>\n","      <td>radio/TV</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>2096</td>\n","      <td>12</td>\n","      <td>education</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>45</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>7882</td>\n","      <td>42</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>53</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>4870</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>29</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>rent</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>9034</td>\n","      <td>36</td>\n","      <td>furniture/equipment</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1585</td>\n","      <td>24</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>1301</td>\n","      <td>18</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>1323</td>\n","      <td>6</td>\n","      <td>car</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>27</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3123</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb3a46ec-65fa-4bf6-a38b-ef0506025d9c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fb3a46ec-65fa-4bf6-a38b-ef0506025d9c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fb3a46ec-65fa-4bf6-a38b-ef0506025d9c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d574485-647c-49d4-b196-11736da30195\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d574485-647c-49d4-b196-11736da30195')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d574485-647c-49d4-b196-11736da30195 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":633}]},{"cell_type":"code","source":["df_train.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o0Nj35OefZLA","outputId":"690584d7-dd32-4073-c165-a80cd385bb12"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Unnamed: 0', 'Age', 'Sex', 'Job', 'Housing', 'Saving accounts',\n","       'Checking account', 'Credit amount', 'Duration', 'Purpose', 'Risk'],\n","      dtype='object')"]},"metadata":{},"execution_count":634}]},{"cell_type":"code","source":["df_train.info\n","df_train.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xfHMzrhpffA8","outputId":"27ee119b-05a0-4f08-cef5-0f4dc8f7a63c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0            0\n","Age                   0\n","Sex                   0\n","Job                   0\n","Housing               0\n","Saving accounts      88\n","Checking account    197\n","Credit amount         0\n","Duration              0\n","Purpose               0\n","Risk                  0\n","dtype: int64"]},"metadata":{},"execution_count":635}]},{"cell_type":"code","source":["df_train.fillna('none')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"aXHF9HUTfoUe","outputId":"792f92a2-38f5-4b78-fdb2-a9651f073e05"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own            none           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little             none   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little             none   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-5ee5f897-edd1-47ce-897c-f7af28676625\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>67</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>none</td>\n","      <td>little</td>\n","      <td>1169</td>\n","      <td>6</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>22</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>5951</td>\n","      <td>48</td>\n","      <td>radio/TV</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>49</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>none</td>\n","      <td>2096</td>\n","      <td>12</td>\n","      <td>education</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>45</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>7882</td>\n","      <td>42</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>53</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>free</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>4870</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>29</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>rent</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>9034</td>\n","      <td>36</td>\n","      <td>furniture/equipment</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>40</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>none</td>\n","      <td>1585</td>\n","      <td>24</td>\n","      <td>furniture/equipment</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>1301</td>\n","      <td>18</td>\n","      <td>radio/TV</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>28</td>\n","      <td>male</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>1323</td>\n","      <td>6</td>\n","      <td>car</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>27</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>own</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3123</td>\n","      <td>24</td>\n","      <td>car</td>\n","      <td>bad</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ee5f897-edd1-47ce-897c-f7af28676625')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5ee5f897-edd1-47ce-897c-f7af28676625 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5ee5f897-edd1-47ce-897c-f7af28676625');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-08b6408b-3ad3-4ccb-bc64-df2a8da3886b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08b6408b-3ad3-4ccb-bc64-df2a8da3886b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-08b6408b-3ad3-4ccb-bc64-df2a8da3886b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":636}]},{"cell_type":"code","source":["df_train.info\n","#df_train.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s_1RQ-xLfyCi","outputId":"df2e3eb0-087c-43b6-f174-e833587aefd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of      Unnamed: 0  Age     Sex  Job Housing Saving accounts Checking account  \\\n","0             0   67    male    2     own             NaN           little   \n","1             1   22  female    2     own          little         moderate   \n","2             2   49    male    1     own          little              NaN   \n","3             3   45    male    2    free          little           little   \n","4             4   53    male    2    free          little           little   \n","..          ...  ...     ...  ...     ...             ...              ...   \n","496         496   29    male    3    rent        moderate         moderate   \n","497         497   40    male    2     own          little              NaN   \n","498         498   32    male    1     own          little         moderate   \n","499         499   28    male    2     own        moderate             rich   \n","500         500   27  female    2     own          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0             1169         6             radio/TV  good  \n","1             5951        48             radio/TV   bad  \n","2             2096        12            education  good  \n","3             7882        42  furniture/equipment  good  \n","4             4870        24                  car   bad  \n","..             ...       ...                  ...   ...  \n","496           9034        36  furniture/equipment   bad  \n","497           1585        24  furniture/equipment  good  \n","498           1301        18             radio/TV  good  \n","499           1323         6                  car  good  \n","500           3123        24                  car   bad  \n","\n","[501 rows x 11 columns]>"]},"metadata":{},"execution_count":637}]},{"cell_type":"code","source":["# 성별\n","\n","train_test_data = [df_train, df_test]\n","\n","\n","sex_mapping = {\n","    \"male\": 0, \"female\": 1\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Sex'] = dataset['Sex'].map(sex_mapping)"],"metadata":{"id":"_fOy5bo_nrbM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bar_chart('Sex')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"p9R-BGKsoLIE","outputId":"0e621523-34df-4c3b-b03f-acfb6d55b948"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 나이\n","\n","for dataset in train_test_data:\n","  dataset.loc[dataset['Age'] < 30, 'Age'] = 0\n","  dataset.loc[(dataset['Age'] >= 30) & (dataset['Age'] <= 49), 'Age'] = 1\n","  dataset.loc[dataset['Age'] >= 50, 'Age'] = 2"],"metadata":{"id":"8tWXPJGyoV0G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train['Age'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P5eya9zfox6E","outputId":"37815a5c-6279-4702-81fc-36b522b94fdd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    246\n","0    187\n","2     68\n","Name: Age, dtype: int64"]},"metadata":{},"execution_count":641}]},{"cell_type":"code","source":["bar_chart('Age')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"Stv2mrc_o45U","outputId":"6ec3a61b-e94e-4b8c-b661-e1d89a7b479f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Housing\n","\n","\n","housing_mapping = {\n","    \"free\": 0, \"rent\": 1, \"own\" : 2\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Housing'] = dataset['Housing'].map(housing_mapping)"],"metadata":{"id":"9IenUqvWo-uU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train['Housing'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"12isaQO7pd_Y","outputId":"94ed127e-b6c9-40b7-ec64-89d03fbec655"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    363\n","1     86\n","0     52\n","Name: Housing, dtype: int64"]},"metadata":{},"execution_count":644}]},{"cell_type":"code","source":["# Credit amount\n","\n","for dataset in train_test_data:\n","  dataset.loc[dataset['Credit amount'] <=2000, 'Credit amount'] = 0\n","  dataset.loc[(dataset['Credit amount'] > 2000) & (dataset['Credit amount'] <= 3000), 'Credit amount'] = 1\n","  dataset.loc[(dataset['Credit amount'] > 3000) & (dataset['Credit amount'] <= 4000), 'Credit amount'] = 2\n","  dataset.loc[dataset['Credit amount'] > 4000, 'Credit amount'] = 3"],"metadata":{"id":"8guc961AraxN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train['Credit amount'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zmC2vQumr6cm","outputId":"e4c942ff-b85f-4edb-d2fe-8eed0660b266"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    222\n","3    123\n","1     91\n","2     65\n","Name: Credit amount, dtype: int64"]},"metadata":{},"execution_count":646}]},{"cell_type":"code","source":["df_train['Duration'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X4iaiULRsI2N","outputId":"8c3a6547-fecd-4a67-ab20-765640969f69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["12    105\n","24     80\n","18     60\n","36     43\n","6      41\n","15     24\n","9      23\n","48     23\n","10     18\n","30     16\n","21     10\n","27      8\n","60      6\n","11      6\n","42      6\n","7       4\n","8       4\n","20      3\n","14      3\n","33      3\n","54      2\n","45      2\n","4       2\n","13      2\n","39      2\n","16      1\n","47      1\n","22      1\n","28      1\n","5       1\n","Name: Duration, dtype: int64"]},"metadata":{},"execution_count":647}]},{"cell_type":"code","source":["# Duration\n","\n","for dataset in train_test_data:\n","  dataset.loc[dataset['Duration'] <=12, 'Duration'] = 0\n","  dataset.loc[(dataset['Duration'] > 12) & (dataset['Duration'] <= 24), 'Duration'] = 1\n","  dataset.loc[(dataset['Duration'] > 24) & (dataset['Duration'] <= 36), 'Duration'] = 2\n","  dataset.loc[dataset['Duration'] > 36, 'Duration'] = 3"],"metadata":{"id":"eHvNB29esfW0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bar_chart('Duration')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":530},"id":"NSVHZ279s__U","outputId":"12393581-a917-48f4-97c4-95699f0bf860"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","# Risk\n","\n","risk_mapping = {\n","    \"good\": 0, \"bad\": 1\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Risk'] = dataset['Risk'].map(risk_mapping)"],"metadata":{"id":"ZL0gPDXstHVD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"00GGoUb6tcqT","outputId":"8d1876ca-a76d-4719-9e58-fe27d8b049ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0             0    2    0    2        2             NaN           little   \n","1             1    0    1    2        2          little         moderate   \n","2             2    1    0    1        2          little              NaN   \n","3             3    1    0    2        0          little           little   \n","4             4    2    0    2        0          little           little   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","496         496    0    0    3        1        moderate         moderate   \n","497         497    1    0    2        2          little              NaN   \n","498         498    1    0    1        2          little         moderate   \n","499         499    0    0    2        2        moderate             rich   \n","500         500    0    1    2        2          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0                0         0             radio/TV     0  \n","1                3         3             radio/TV     1  \n","2                1         0            education     0  \n","3                3         3  furniture/equipment     0  \n","4                3         1                  car     1  \n","..             ...       ...                  ...   ...  \n","496              3         2  furniture/equipment     1  \n","497              0         1  furniture/equipment     0  \n","498              0         1             radio/TV     0  \n","499              0         0                  car     0  \n","500              2         1                  car     1  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-307ab9d6-093f-449c-862f-93ed9a624ead\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>radio/TV</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>radio/TV</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>education</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>furniture/equipment</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>car</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>furniture/equipment</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>furniture/equipment</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>radio/TV</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>car</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>car</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-307ab9d6-093f-449c-862f-93ed9a624ead')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-307ab9d6-093f-449c-862f-93ed9a624ead button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-307ab9d6-093f-449c-862f-93ed9a624ead');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-76d387d2-45ca-4559-9d53-7b0aac70ac51\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76d387d2-45ca-4559-9d53-7b0aac70ac51')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-76d387d2-45ca-4559-9d53-7b0aac70ac51 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":651}]},{"cell_type":"code","source":["df_train['Purpose'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZTtVsUWJDeoO","outputId":"5455b9a1-f7bb-4a79-d0cd-054eeebf79ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["car                    156\n","radio/TV               139\n","furniture/equipment     98\n","business                51\n","education               31\n","repairs                 12\n","vacation/others          8\n","domestic appliances      6\n","Name: Purpose, dtype: int64"]},"metadata":{},"execution_count":652}]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"9yVIqeXrEPUx","outputId":"21b84bb8-619d-4254-b437-afba687fbcfb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0             0    2    0    2        2             NaN           little   \n","1             1    0    1    2        2          little         moderate   \n","2             2    1    0    1        2          little              NaN   \n","3             3    1    0    2        0          little           little   \n","4             4    2    0    2        0          little           little   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","496         496    0    0    3        1        moderate         moderate   \n","497         497    1    0    2        2          little              NaN   \n","498         498    1    0    1        2          little         moderate   \n","499         499    0    0    2        2        moderate             rich   \n","500         500    0    1    2        2          little           little   \n","\n","     Credit amount  Duration              Purpose  Risk  \n","0                0         0             radio/TV     0  \n","1                3         3             radio/TV     1  \n","2                1         0            education     0  \n","3                3         3  furniture/equipment     0  \n","4                3         1                  car     1  \n","..             ...       ...                  ...   ...  \n","496              3         2  furniture/equipment     1  \n","497              0         1  furniture/equipment     0  \n","498              0         1             radio/TV     0  \n","499              0         0                  car     0  \n","500              2         1                  car     1  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-a4b9fd39-d664-4e6b-9faa-c33c40317f79\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>radio/TV</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>radio/TV</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>education</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>furniture/equipment</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>car</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>furniture/equipment</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>furniture/equipment</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>radio/TV</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>car</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>car</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4b9fd39-d664-4e6b-9faa-c33c40317f79')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4b9fd39-d664-4e6b-9faa-c33c40317f79 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4b9fd39-d664-4e6b-9faa-c33c40317f79');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b2dfedfe-8a0d-4505-9615-0cbf4f948655\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2dfedfe-8a0d-4505-9615-0cbf4f948655')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b2dfedfe-8a0d-4505-9615-0cbf4f948655 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":653}]},{"cell_type":"code","source":["#Purpose\n","\n","\n","purpose_mapping = {\n","    \"car\": 0, \"radio/TV\": 1, \"furniture/equipment\" : 2, \"business\": 3, \"education\": 4, \"repairs\": 5, \"vacation/others\": 6, \"domestic appliances\" : 7\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Purpose'] = dataset['Purpose'].map(purpose_mapping)"],"metadata":{"id":"5W8R4AuOMk84"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Purpose\n","\n","\n","purpose_mapping = {\n","    \"car\": 0, \"radio/TV\": 1, \"furniture/equipment\" : 2, \"business\": 3, \"education\": 4, \"repairs\": 2, \"vacation/others\": 4, \"domestic appliances\" : 1\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Purpose'] = dataset['Purpose'].map(purpose_mapping)"],"metadata":{"id":"lV-ip-R_MqJH"}},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"wzyug6yMEw_D","outputId":"9276c7c0-3690-483e-a3d6-48e29a80a5de"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0             0    2    0    2        2             NaN           little   \n","1             1    0    1    2        2          little         moderate   \n","2             2    1    0    1        2          little              NaN   \n","3             3    1    0    2        0          little           little   \n","4             4    2    0    2        0          little           little   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","496         496    0    0    3        1        moderate         moderate   \n","497         497    1    0    2        2          little              NaN   \n","498         498    1    0    1        2          little         moderate   \n","499         499    0    0    2        2        moderate             rich   \n","500         500    0    1    2        2          little           little   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                0         0        1     0  \n","1                3         3        1     1  \n","2                1         0        4     0  \n","3                3         3        2     0  \n","4                3         1        0     1  \n","..             ...       ...      ...   ...  \n","496              3         2        2     1  \n","497              0         1        2     0  \n","498              0         1        1     0  \n","499              0         0        0     0  \n","500              2         1        0     1  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-189ec4e7-190b-45c9-bd72-bb318c11a1cd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>little</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>moderate</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-189ec4e7-190b-45c9-bd72-bb318c11a1cd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-189ec4e7-190b-45c9-bd72-bb318c11a1cd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-189ec4e7-190b-45c9-bd72-bb318c11a1cd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-360b841f-7863-48b0-aa6a-b2001f4cd182\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-360b841f-7863-48b0-aa6a-b2001f4cd182')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-360b841f-7863-48b0-aa6a-b2001f4cd182 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":655}]},{"cell_type":"code","source":["df_train['Purpose'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xo2K4iHzE15g","outputId":"328ebec0-387a-4fd7-a886-1f3d6b7a5c8b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    156\n","1    139\n","2     98\n","3     51\n","4     31\n","5     12\n","6      8\n","7      6\n","Name: Purpose, dtype: int64"]},"metadata":{},"execution_count":656}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"0o7A_PUeGlZY","outputId":"41a9841b-49e0-4b8c-cc74-c6bba120c952"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0           501    1    0    2        0          little           little   \n","1           502    1    0    2        2        moderate             rich   \n","2           503    1    0    2        2        moderate         moderate   \n","3           504    0    1    2        1          little           little   \n","4           505    0    0    1        2             NaN              NaN   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","494         995    1    1    1        2          little              NaN   \n","495         996    1    0    3        2          little           little   \n","496         997    1    0    2        2          little              NaN   \n","497         998    0    0    2        0          little           little   \n","498         999    0    0    2        2        moderate         moderate   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                3         2        0   NaN  \n","1                0         0        1   NaN  \n","2                0         1        1   NaN  \n","3                0         1        0   NaN  \n","4                0         0        0   NaN  \n","..             ...       ...      ...   ...  \n","494              0         0        2   NaN  \n","495              2         2        0   NaN  \n","496              0         0        1   NaN  \n","497              0         3        1   NaN  \n","498              3         3        0   NaN  \n","\n","[499 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-e49a304a-2db3-4492-97f2-907b09ab4518\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>rich</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>504</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>505</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494</th>\n","      <td>995</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>996</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>997</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>little</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>998</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>little</td>\n","      <td>little</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>999</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>moderate</td>\n","      <td>moderate</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e49a304a-2db3-4492-97f2-907b09ab4518')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e49a304a-2db3-4492-97f2-907b09ab4518 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e49a304a-2db3-4492-97f2-907b09ab4518');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6d3d23e-4631-48ee-8b28-e021dda3de99\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6d3d23e-4631-48ee-8b28-e021dda3de99')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6d3d23e-4631-48ee-8b28-e021dda3de99 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":657}]},{"cell_type":"code","source":["df_train['Saving accounts'].fillna('none', inplace=True)\n","print(df_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qlKbHjFGwHI","outputId":"10d401aa-b26c-4c93-a544-e5308171d10b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0             0    2    0    2        2            none           little   \n","1             1    0    1    2        2          little         moderate   \n","2             2    1    0    1        2          little              NaN   \n","3             3    1    0    2        0          little           little   \n","4             4    2    0    2        0          little           little   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","496         496    0    0    3        1        moderate         moderate   \n","497         497    1    0    2        2          little              NaN   \n","498         498    1    0    1        2          little         moderate   \n","499         499    0    0    2        2        moderate             rich   \n","500         500    0    1    2        2          little           little   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                0         0        1     0  \n","1                3         3        1     1  \n","2                1         0        4     0  \n","3                3         3        2     0  \n","4                3         1        0     1  \n","..             ...       ...      ...   ...  \n","496              3         2        2     1  \n","497              0         1        2     0  \n","498              0         1        1     0  \n","499              0         0        0     0  \n","500              2         1        0     1  \n","\n","[501 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_train['Checking account'].fillna('none', inplace=True)\n","print(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1dhiHexnHjkw","outputId":"08b9241f-cb4a-4472-f611-493e88d9b778"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0           501    1    0    2        0          little           little   \n","1           502    1    0    2        2        moderate             rich   \n","2           503    1    0    2        2        moderate         moderate   \n","3           504    0    1    2        1          little           little   \n","4           505    0    0    1        2             NaN              NaN   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","494         995    1    1    1        2          little              NaN   \n","495         996    1    0    3        2          little           little   \n","496         997    1    0    2        2          little              NaN   \n","497         998    0    0    2        0          little           little   \n","498         999    0    0    2        2        moderate         moderate   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                3         2        0   NaN  \n","1                0         0        1   NaN  \n","2                0         1        1   NaN  \n","3                0         1        0   NaN  \n","4                0         0        0   NaN  \n","..             ...       ...      ...   ...  \n","494              0         0        2   NaN  \n","495              2         2        0   NaN  \n","496              0         0        1   NaN  \n","497              0         3        1   NaN  \n","498              3         3        0   NaN  \n","\n","[499 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_test['Saving accounts'].fillna('none', inplace=True)\n","print(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z3MXJFo6RWte","outputId":"9fd00be6-2324-4441-f71b-d92a3c5f5c48"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0           501    1    0    2        0          little           little   \n","1           502    1    0    2        2        moderate             rich   \n","2           503    1    0    2        2        moderate         moderate   \n","3           504    0    1    2        1          little           little   \n","4           505    0    0    1        2            none              NaN   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","494         995    1    1    1        2          little              NaN   \n","495         996    1    0    3        2          little           little   \n","496         997    1    0    2        2          little              NaN   \n","497         998    0    0    2        0          little           little   \n","498         999    0    0    2        2        moderate         moderate   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                3         2        0   NaN  \n","1                0         0        1   NaN  \n","2                0         1        1   NaN  \n","3                0         1        0   NaN  \n","4                0         0        0   NaN  \n","..             ...       ...      ...   ...  \n","494              0         0        2   NaN  \n","495              2         2        0   NaN  \n","496              0         0        1   NaN  \n","497              0         3        1   NaN  \n","498              3         3        0   NaN  \n","\n","[499 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_test['Checking account'].fillna('none', inplace=True)\n","print(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QxBU_47CRXR3","outputId":"19a172e9-cde6-4403-ba90-44cf96fd5c1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0           501    1    0    2        0          little           little   \n","1           502    1    0    2        2        moderate             rich   \n","2           503    1    0    2        2        moderate         moderate   \n","3           504    0    1    2        1          little           little   \n","4           505    0    0    1        2            none             none   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","494         995    1    1    1        2          little             none   \n","495         996    1    0    3        2          little           little   \n","496         997    1    0    2        2          little             none   \n","497         998    0    0    2        0          little           little   \n","498         999    0    0    2        2        moderate         moderate   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                3         2        0   NaN  \n","1                0         0        1   NaN  \n","2                0         1        1   NaN  \n","3                0         1        0   NaN  \n","4                0         0        0   NaN  \n","..             ...       ...      ...   ...  \n","494              0         0        2   NaN  \n","495              2         2        0   NaN  \n","496              0         0        1   NaN  \n","497              0         3        1   NaN  \n","498              3         3        0   NaN  \n","\n","[499 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_test['Risk'].fillna('0', inplace=True)\n","print(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IBlVMIGhSPCH","outputId":"cfaf3d68-bf7c-4343-b69c-e5fabf6beaab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing  Saving accounts  Checking account  \\\n","0           501    1    0    2        0                2                 2   \n","1           502    1    0    2        2                1                 3   \n","2           503    1    0    2        2                1                 1   \n","3           504    0    1    2        1                2                 2   \n","4           505    0    0    1        2                0                 0   \n","..          ...  ...  ...  ...      ...              ...               ...   \n","494         995    1    1    1        2                2                 0   \n","495         996    1    0    3        2                2                 2   \n","496         997    1    0    2        2                2                 0   \n","497         998    0    0    2        0                2                 2   \n","498         999    0    0    2        2                1                 1   \n","\n","     Credit amount  Duration  Purpose Risk  \n","0                3         2        0    0  \n","1                0         0        1    0  \n","2                0         1        1    0  \n","3                0         1        0    0  \n","4                0         0        0    0  \n","..             ...       ...      ...  ...  \n","494              0         0        2    0  \n","495              2         2        0    0  \n","496              0         0        1    0  \n","497              0         3        1    0  \n","498              3         3        0    0  \n","\n","[499 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["print(df_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yxsQhnYUHtPv","outputId":"29f98eb6-6003-4a43-afb2-216ba43a0950"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0             0    2    0    2        2            none           little   \n","1             1    0    1    2        2          little         moderate   \n","2             2    1    0    1        2          little             none   \n","3             3    1    0    2        0          little           little   \n","4             4    2    0    2        0          little           little   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","496         496    0    0    3        1        moderate         moderate   \n","497         497    1    0    2        2          little             none   \n","498         498    1    0    1        2          little         moderate   \n","499         499    0    0    2        2        moderate             rich   \n","500         500    0    1    2        2          little           little   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                0         0        1     0  \n","1                3         3        1     1  \n","2                1         0        4     0  \n","3                3         3        2     0  \n","4                3         1        0     1  \n","..             ...       ...      ...   ...  \n","496              3         2        2     1  \n","497              0         1        2     0  \n","498              0         1        1     0  \n","499              0         0        0     0  \n","500              2         1        0     1  \n","\n","[501 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["print(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YdA4D_OgRuy-","outputId":"8efbd764-16b4-40c3-8a89-a3c681fd079a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     Unnamed: 0  Age  Sex  Job  Housing Saving accounts Checking account  \\\n","0           501    1    0    2        0          little           little   \n","1           502    1    0    2        2        moderate             rich   \n","2           503    1    0    2        2        moderate         moderate   \n","3           504    0    1    2        1          little           little   \n","4           505    0    0    1        2            none             none   \n","..          ...  ...  ...  ...      ...             ...              ...   \n","494         995    1    1    1        2          little             none   \n","495         996    1    0    3        2          little           little   \n","496         997    1    0    2        2          little             none   \n","497         998    0    0    2        0          little           little   \n","498         999    0    0    2        2        moderate         moderate   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                3         2        0   NaN  \n","1                0         0        1   NaN  \n","2                0         1        1   NaN  \n","3                0         1        0   NaN  \n","4                0         0        0   NaN  \n","..             ...       ...      ...   ...  \n","494              0         0        2   NaN  \n","495              2         2        0   NaN  \n","496              0         0        1   NaN  \n","497              0         3        1   NaN  \n","498              3         3        0   NaN  \n","\n","[499 rows x 11 columns]\n"]}]},{"cell_type":"code","source":["df_train['Checking account'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-4EjvTwpHvDy","outputId":"521f0c54-e97b-461d-ab22-b872d7d57f87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["none        197\n","moderate    144\n","little      129\n","rich         31\n","Name: Checking account, dtype: int64"]},"metadata":{},"execution_count":664}]},{"cell_type":"code","source":["df_train['Saving accounts'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rftN_hlrH-GP","outputId":"4fdae611-a097-4720-8b8a-e5afc54c109b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["little        302\n","none           88\n","moderate       49\n","quite rich     33\n","rich           29\n","Name: Saving accounts, dtype: int64"]},"metadata":{},"execution_count":665}]},{"cell_type":"code","source":["# account\n","\n","checking_mapping = {\n","    \"none\": 0, \"moderate\": 1, \"little\" : 2, \"rich\" : 3\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Checking account'] = dataset['Checking account'].map(checking_mapping)"],"metadata":{"id":"ei8oZx-WH-Om"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# account\n","\n","saving_mapping = {\n","    \"none\": 0, \"moderate\": 1, \"little\" : 2, \"rich\" : 3, 'quite rich' : 4\n","}\n","\n","for dataset in train_test_data:\n","  dataset['Saving accounts'] = dataset['Saving accounts'].map(saving_mapping)"],"metadata":{"id":"PRVkvoL0IcKA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"9j_EQeLKI6OL","outputId":"6de5797e-2621-41ce-a533-74759fcfd981"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing  Saving accounts  Checking account  \\\n","0             0    2    0    2        2                0                 2   \n","1             1    0    1    2        2                2                 1   \n","2             2    1    0    1        2                2                 0   \n","3             3    1    0    2        0                2                 2   \n","4             4    2    0    2        0                2                 2   \n","..          ...  ...  ...  ...      ...              ...               ...   \n","496         496    0    0    3        1                1                 1   \n","497         497    1    0    2        2                2                 0   \n","498         498    1    0    1        2                2                 1   \n","499         499    0    0    2        2                1                 3   \n","500         500    0    1    2        2                2                 2   \n","\n","     Credit amount  Duration  Purpose  Risk  \n","0                0         0        1     0  \n","1                3         3        1     1  \n","2                1         0        4     0  \n","3                3         3        2     0  \n","4                3         1        0     1  \n","..             ...       ...      ...   ...  \n","496              3         2        2     1  \n","497              0         1        2     0  \n","498              0         1        1     0  \n","499              0         0        0     0  \n","500              2         1        0     1  \n","\n","[501 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-d18d9acb-a576-4834-b552-6f95ea725407\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>496</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>497</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>498</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>499</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>500</th>\n","      <td>500</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>501 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d18d9acb-a576-4834-b552-6f95ea725407')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d18d9acb-a576-4834-b552-6f95ea725407 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d18d9acb-a576-4834-b552-6f95ea725407');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ec30dd53-4e00-44e3-96eb-f2f452c34c9e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec30dd53-4e00-44e3-96eb-f2f452c34c9e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ec30dd53-4e00-44e3-96eb-f2f452c34c9e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":668}]},{"cell_type":"markdown","source":["Modeling"],"metadata":{"id":"VD06W2K8JExa"}},{"cell_type":"code","source":["train_data = df_train.drop('Risk', axis=1)\n","target_data = df_train['Risk']"],"metadata":{"id":"YVWymSevJr1A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC"],"metadata":{"id":"2lWw-qoLJFv_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import KFold\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import cross_val_predict"],"metadata":{"id":"seShNdRxJI44"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["k_fold = KFold(n_splits=10, shuffle=True, random_state=0)"],"metadata":{"id":"lGbB6NSIJLS2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["knn = KNeighborsClassifier(n_neighbors=10)\n","score = cross_val_score(knn,\n","                        train_data,\n","                        target_data,\n","                        cv=k_fold,\n","                        scoring=\"accuracy\"\n","                        )\n","import numpy as np\n","print(np.mean(score)*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zqsEdxGBJbjA","outputId":"f26f8852-5b1e-4eda-ce2e-cf4b2c05dabc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["72.27058823529411\n"]}]},{"cell_type":"code","source":["rf = RandomForestClassifier(n_estimators=13)\n","\n","score = cross_val_score(\n","                rf,\n","                train_data,\n","                target_data,\n","                cv=k_fold,\n","                scoring=\"accuracy\")\n","\n","print(np.mean(score)*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nTfqoX8qJzT_","outputId":"9c025b43-4a1d-429b-9007-cb99d7fda3e4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["70.06666666666666\n"]}]},{"cell_type":"code","source":["svc = SVC()\n","\n","score = cross_val_score(svc,\n","                        train_data,\n","                        target_data,\n","                        cv=k_fold,\n","                        scoring=\"accuracy\")\n","\n","print(np.mean(score)*100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F4Ze9sSZJ3av","outputId":"b4bde9ae-0a2c-40e6-f130-c3d46e3038dc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["72.67058823529412\n"]}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"aTSzn7T6Qltu","outputId":"c1ddb37f-39a7-493f-8afb-3f3735ce7283"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing  Saving accounts  Checking account  \\\n","0           501    1    0    2        0                2                 2   \n","1           502    1    0    2        2                1                 3   \n","2           503    1    0    2        2                1                 1   \n","3           504    0    1    2        1                2                 2   \n","4           505    0    0    1        2                0                 0   \n","..          ...  ...  ...  ...      ...              ...               ...   \n","494         995    1    1    1        2                2                 0   \n","495         996    1    0    3        2                2                 2   \n","496         997    1    0    2        2                2                 0   \n","497         998    0    0    2        0                2                 2   \n","498         999    0    0    2        2                1                 1   \n","\n","     Credit amount  Duration  Purpose Risk  \n","0                3         2        0    0  \n","1                0         0        1    0  \n","2                0         1        1    0  \n","3                0         1        0    0  \n","4                0         0        0    0  \n","..             ...       ...      ...  ...  \n","494              0         0        2    0  \n","495              2         2        0    0  \n","496              0         0        1    0  \n","497              0         3        1    0  \n","498              3         3        0    0  \n","\n","[499 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-d202fffb-4df6-423a-8cc0-dfce96a2d571\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>504</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>505</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494</th>\n","      <td>995</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>996</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>997</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>998</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>999</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d202fffb-4df6-423a-8cc0-dfce96a2d571')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d202fffb-4df6-423a-8cc0-dfce96a2d571 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d202fffb-4df6-423a-8cc0-dfce96a2d571');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-95b1241f-1b1e-450c-ba60-1b1a37cfdb7d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95b1241f-1b1e-450c-ba60-1b1a37cfdb7d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-95b1241f-1b1e-450c-ba60-1b1a37cfdb7d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":684}]},{"cell_type":"code","source":["df_test['Saving accounts'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vzp1kag8QvHw","outputId":"fbaff80d-d236-4f71-8d90-95f0bb671555"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    301\n","0     95\n","1     54\n","4     30\n","3     19\n","Name: Saving accounts, dtype: int64"]},"metadata":{},"execution_count":677}]},{"cell_type":"code","source":["df_test['Checking account'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"flUsSUuWQ5Lu","outputId":"4e2f1548-0d97-45c5-cbfc-49d1b949341e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    197\n","2    145\n","1    125\n","3     32\n","Name: Checking account, dtype: int64"]},"metadata":{},"execution_count":678}]},{"cell_type":"code","source":["df_test.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gHid5TetQ9jG","outputId":"6a2a44b5-f8ee-40d3-8683-11ded9d8e97b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Unnamed: 0            0\n","Age                   0\n","Sex                   0\n","Job                   0\n","Housing               0\n","Saving accounts       0\n","Checking account      0\n","Credit amount         0\n","Duration              0\n","Purpose               0\n","Risk                499\n","dtype: int64"]},"metadata":{},"execution_count":679}]},{"cell_type":"markdown","source":["**최종 결과 예측**\n"],"metadata":{"id":"c1c9z4NLKc6S"}},{"cell_type":"code","source":["rf = RandomForestClassifier(n_estimators=13)\n","rf.fit(train_data, target_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"ja-IvIzYKen-","outputId":"74c2e13b-2f0f-4496-bf4a-bd98298e6f81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(n_estimators=13)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(n_estimators=13)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_estimators=13)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":680}]},{"cell_type":"code","source":["test_data = df_test.drop(['Risk'], axis=1)\n","pred = rf.predict(test_data)"],"metadata":{"id":"dE8kTC2PP2BJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_result = pd.DataFrame(\n","    {\"Unnamed: 0\" : df_test['Unnamed: 0'],\n","     \"Risk\" : pred}\n",")\n","df_result.to_csv('submission.csv')"],"metadata":{"id":"Sj1bERMIUK23"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":2289},"id":"kmI8bExsUhEF","outputId":"f830b1be-0d39-4610-d8ab-ae561e8db124"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Risk\n","0           501     0\n","1           502     0\n","2           503     1\n","3           504     1\n","4           505     0\n","..          ...   ...\n","494         995     0\n","495         996     1\n","496         997     0\n","497         998     1\n","498         999     1\n","\n","[499 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-0f7b7e50-d406-48f9-89e9-f55ce00974e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>504</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>505</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494</th>\n","      <td>995</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>996</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>997</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>998</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>999</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f7b7e50-d406-48f9-89e9-f55ce00974e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f7b7e50-d406-48f9-89e9-f55ce00974e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f7b7e50-d406-48f9-89e9-f55ce00974e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eace4e2b-763b-4d32-9092-5156c544cfba\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eace4e2b-763b-4d32-9092-5156c544cfba')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eace4e2b-763b-4d32-9092-5156c544cfba button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":694}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"ruwUDzZgS4Au","outputId":"58089a22-52bf-48ff-e4b4-ab7e048ae880"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  Age  Sex  Job  Housing  Saving accounts  Checking account  \\\n","0           501    1    0    2        0                2                 2   \n","1           502    1    0    2        2                1                 3   \n","2           503    1    0    2        2                1                 1   \n","3           504    0    1    2        1                2                 2   \n","4           505    0    0    1        2                0                 0   \n","..          ...  ...  ...  ...      ...              ...               ...   \n","494         995    1    1    1        2                2                 0   \n","495         996    1    0    3        2                2                 2   \n","496         997    1    0    2        2                2                 0   \n","497         998    0    0    2        0                2                 2   \n","498         999    0    0    2        2                1                 1   \n","\n","     Credit amount  Duration  Purpose Risk  \n","0                3         2        0    0  \n","1                0         0        1    0  \n","2                0         1        1    0  \n","3                0         1        0    0  \n","4                0         0        0    0  \n","..             ...       ...      ...  ...  \n","494              0         0        2    0  \n","495              2         2        0    0  \n","496              0         0        1    0  \n","497              0         3        1    0  \n","498              3         3        0    0  \n","\n","[499 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-1f3331fe-a199-4378-8789-34e1d1d6ccde\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>Job</th>\n","      <th>Housing</th>\n","      <th>Saving accounts</th>\n","      <th>Checking account</th>\n","      <th>Credit amount</th>\n","      <th>Duration</th>\n","      <th>Purpose</th>\n","      <th>Risk</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>501</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>502</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>503</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>504</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>505</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494</th>\n","      <td>995</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>996</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>997</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>998</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>999</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>499 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f3331fe-a199-4378-8789-34e1d1d6ccde')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f3331fe-a199-4378-8789-34e1d1d6ccde button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f3331fe-a199-4378-8789-34e1d1d6ccde');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-853a7e3e-6cb5-498d-8fd0-583a5d14c6c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-853a7e3e-6cb5-498d-8fd0-583a5d14c6c6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-853a7e3e-6cb5-498d-8fd0-583a5d14c6c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":691}]},{"cell_type":"code","source":["accuracy_score(answer['Risk'], pred)"],"metadata":{"id":"kMUIyC6UsgLx"},"execution_count":null,"outputs":[]}]}